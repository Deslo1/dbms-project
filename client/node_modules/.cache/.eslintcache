[{"C:\\Users\\Ravisankar S Menon\\Desktop\\dbms\\client\\src\\index.js":"1","C:\\Users\\Ravisankar S Menon\\Desktop\\dbms\\client\\src\\App.js":"2","C:\\Users\\Ravisankar S Menon\\Desktop\\dbms\\client\\src\\pages\\Login.js":"3","C:\\Users\\Ravisankar S Menon\\Desktop\\dbms\\client\\src\\pages\\Form.js":"4","C:\\Users\\Ravisankar S Menon\\Desktop\\dbms\\client\\src\\pages\\Squad.js":"5","C:\\Users\\Ravisankar S Menon\\Desktop\\dbms\\client\\src\\pages\\ActiveCalls.js":"6","C:\\Users\\Ravisankar S Menon\\Desktop\\dbms\\client\\src\\pages\\ShowMap.js":"7","C:\\Users\\Ravisankar S Menon\\Desktop\\dbms\\client\\src\\pages\\Map.jsx":"8"},{"size":190,"mtime":1675610079213,"results":"9","hashOfConfig":"10"},{"size":533,"mtime":1675610388827,"results":"11","hashOfConfig":"10"},{"size":1430,"mtime":1675610382100,"results":"12","hashOfConfig":"10"},{"size":5028,"mtime":1675612462235,"results":"13","hashOfConfig":"10"},{"size":3601,"mtime":1675612099559,"results":"14","hashOfConfig":"10"},{"size":1148,"mtime":1675610336040,"results":"15","hashOfConfig":"10"},{"size":1267,"mtime":1675610416775,"results":"16","hashOfConfig":"10"},{"size":1426,"mtime":1675612397581,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"498gm9",{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Ravisankar S Menon\\Desktop\\dbms\\client\\src\\index.js",[],[],"C:\\Users\\Ravisankar S Menon\\Desktop\\dbms\\client\\src\\App.js",["44"],[],"C:\\Users\\Ravisankar S Menon\\Desktop\\dbms\\client\\src\\pages\\Login.js",[],[],"C:\\Users\\Ravisankar S Menon\\Desktop\\dbms\\client\\src\\pages\\Form.js",["45"],[],"import React from 'react';\r\nimport axios from \"axios\";\r\nimport './../styles/Form.css';\r\nimport { useEffect, useState } from \"react\";\r\nimport ActiveCalls from \"./ActiveCalls.js\"\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport icon from \"./../images/icon.png\";\r\nimport L from \"leaflet\";\r\nimport \"leaflet-routing-machine\";\r\nimport { MapContainer, TileLayer,useMap } from \"react-leaflet\";\r\nimport \"./../styles/Map.css\";\r\n\r\n\r\nfunction Form(){\r\n\r\n    const types=[\"Domestic Abuse\",\"Armed Assault\",\"Public Nuisance\"];\r\n    const jurisdictions=[\"Thrissur\",\"Thodupuzha\",\"Allapuzha\"];\r\n    const priority=[];\r\n    for(let i=1;i<11;i++){\r\n        priority.push(i);\r\n    }\r\n\r\n    const getjur=jurisdictions.map(jur=>{\r\n        return(<option value={jur}>{jur}</option>)});\r\n    const gettypes=types.map(type=>{\r\n        return(<option value={type}>{type}</option>)});\r\n    const getpriorities=priority.map(pr=>{\r\n        return(<option value={pr}>{pr}</option>)});\r\n\r\n        const [formData, setFormData] = React.useState(\r\n            {\r\n                name: \"\",\r\n                jurisdiction: \"\",\r\n                type: \"\",\r\n                number: 0,\r\n                description: \"\",\r\n                latitude:null,\r\n                longitude:null,\r\n                priority:0\r\n            }\r\n        )\r\n\r\n        function handleChange(event){\r\n            setFormData(prevFormData =>{\r\n                return{\r\n                    ...prevFormData,\r\n                    [event.target.name]:event.target.value\r\n                }\r\n            })\r\n        }\r\n\r\n    function onSubmit(event) {\r\n            axios.post(\"http://localhost:3001\",formData).then((response) => {\r\n            });\r\n            }\r\n\r\n  const [coords, setCorrds] = useState({\r\n    latitude: 0,\r\n    longitude: 0\r\n  });\r\n\r\n\r\n  function error() {\r\n    alert('Sorry, no position available.');\r\n  }\r\n  const options = {\r\n    enableHighAccuracy: true,\r\n    maximumAge: 30000,\r\n    timeout: 27000\r\n  };\r\n\r\n  function getCurrentCityName(position){\r\n    setCorrds({\r\n      latitude: position.coords.latitude,\r\n      longitude: position.coords.longitude\r\n    }); \r\n   let url=\"https://nominatim.openstreetmap.org/reverse?format=jsonv2\"+\r\n   \"&lat=\"+coords.latitude+\"&lon=\"+coords.longitude;\r\n    fetch(url, {\r\n      method: \"GET\",   \r\n      mode: 'cors', \r\n      headers: {\r\n        \"Access-Control-Allow-Origin\": \"https://o2cj2q.csb.app\"\r\n      }\r\n    })\r\n      .then((response) => response.json())\r\n  }\r\n\r\n  useEffect(() => {\r\n    navigator.geolocation.getCurrentPosition(\r\n    getCurrentCityName,\r\n    error,\r\n    options\r\n    );\r\n  }, []);\r\n\r\n    const customIcon = new L.Icon({\r\n    iconUrl: icon,\r\n    iconSize: [25, 35],\r\n    iconAnchor: [5, 30]\r\n  });\r\n\r\n    var marker;\r\n    let i=0;\r\n\r\n  function MapView() {\r\n    let map = useMap();\r\n    map.setView([coords.latitude,coords.longitude], map.getZoom());\r\n    map.on('click', onMapClick);\r\n    function onMapClick(e) {\r\n        if(i>0)\r\n            map.removeLayer(marker);\r\n        i++;\r\n        marker=new L.Marker(e.latlng,{icon:customIcon}).addTo(map);\r\n        setFormData(prevFormData =>{\r\n                return{\r\n                    ...prevFormData,\r\n                    latitude:e.latlng.lat,\r\n                    longitude:e.latlng.lng\r\n                }\r\n            })\r\n    };\r\n    return null;\r\n  }\r\n\r\n\r\n\r\n    return(\r\n        <div className='Home'>\r\n        <form className='form'>\r\n        <label>Name</label><br/>\r\n        <input type=\"text\" name=\"name\" onChange={handleChange}></input><br/><br/>\r\n        <label>Jurisdiction</label><br/>\r\n        <select name=\"jurisdiction\" id=\"jurisdiction\"  onChange={handleChange}>\r\n        <option>Choose</option>\r\n        {getjur}    \r\n        </select><br/><br/><br/>\r\n        <label>Type</label><br/>\r\n        <select name=\"type\" id=\"type\" onChange={handleChange}>\r\n        <option>Choose</option>\r\n        {gettypes}\r\n        </select><br/><br/>\r\n        <label>Priority</label><br/>\r\n        <select name=\"priority\" id=\"priority\" onChange={handleChange} >\r\n        <option>Choose</option>\r\n        {getpriorities}\r\n        </select><br/><br/>\r\n        <label>Number</label><br/>\r\n        <input type=\"number\" name=\"number\" onChange={handleChange}></input><br/><br/>\r\n        <label>Description</label><br/>\r\n        <textarea name=\"description\" onChange={handleChange}></textarea><br/><br/>\r\n        <div className='leaflet-container'> \r\n        {coords.latitude!==0&&\r\n        <MapContainer\r\n        classsName=\"map\"\r\n        center={[coords.latitude,coords.longitude]}\r\n        zoom={5}\r\n        scrollWheelZoom={true}\r\n        >\r\n        <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"/>\r\n        <MapView />\r\n        </MapContainer>}</div><br/>\r\n        <button onClick={onSubmit}>Submit</button><br/><br/>\r\n        </form>\r\n        <ActiveCalls/>\r\n        <button className=\"logOutButton\" onClick={()=>window.location.href=\"http://localhost:3000/\"}>\r\n        Log Out\r\n        </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Form;","C:\\Users\\Ravisankar S Menon\\Desktop\\dbms\\client\\src\\pages\\Squad.js",["46"],[],"import React,{useState} from \"react\";\r\nimport ShowMap from \"./ShowMap\"\r\nimport axios from \"axios\";\r\nimport \"./../styles/Squad.css\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nfunction Squad(){\r\n\r\n    const {state} = useLocation();\r\n    const jurisdiction=state.data.jurisdiction;\r\n    const name= state.data.name.substring(0,5);\r\n    const number= state.data.name[name.length];\r\n\r\n    const members=state.data.squad.map(data=>{\r\n        return(\r\n        <tr>\r\n            <td>{data.member}</td>\r\n            <td>{data.role}</td>\r\n        </tr>\r\n        )\r\n        })\r\n\r\n    const [formData, setFormData] = useState(\r\n        {\r\n            name: \"\",\r\n            jurisdiction: \"\",\r\n            type: \"\",\r\n            priority: 0,\r\n            description: \"\"\r\n        }\r\n    )\r\n\r\n    const [coords,setCorrds]=useState({\r\n        latitude:0,\r\n        longitude:0\r\n    })\r\n    const [checked,setChecked]=useState(false);\r\n    const [civ,setCiv]=useState(null);\r\n    const [id,setId]=useState(\"\");\r\n\r\n    function Change(name){\r\n    setCiv(name);\r\n    }\r\n\r\n    function sendReq(){\r\n        axios.get(`http://localhost:3001/?name=${civ}&jurisdiction=${jurisdiction}`).then((response)=>{\r\n            setId(response.data.data.activecalls[0]._id);\r\n            setCorrds({\r\n                latitude:response.data.data.activecalls[0].latitude,\r\n                longitude:response.data.data.activecalls[0].longitude\r\n            })\r\n            setChecked(true);\r\n        })\r\n    }\r\n\r\n    function loadNewCases(){\r\n              setChecked(false);\r\n              axios.delete(`http://localhost:3001/${id}`).then((response)=>{\r\n                console.log(response);\r\n                window.location.href=\"http://localhost:3000/squad\";\r\n              })\r\n    }\r\n    \r\n\r\n\r\n    React.useEffect(() => {\r\n    axios.get(`http://localhost:3001/?jurisdiction=${jurisdiction}&sort=-priority`).then( (response) => {\r\n    setFormData(response.data.data.activecalls)\r\n    setCiv(response.data.data.activecalls[0].name)\r\n    })\r\n    }, []);\r\n\r\n    return(\r\n        <div className=\"squadContainer\">\r\n            <div className=\"sidebar\">\r\n            <h1>{name} {number}</h1><br/>\r\n            <h1>{jurisdiction}</h1><br/><br/><br/><br/>\r\n            <table>\r\n            <tr>\r\n            <th>Name</th>\r\n            <th>Role</th>\r\n            </tr> \r\n            {members}\r\n            </table><br/><br/><br/><br/>\r\n            {!checked&&<button className=\"case-button\" onClick={sendReq}>Take Case</button>}\r\n            {checked&&<button className=\"case-closed\" onClick={loadNewCases}>Case Closed</button>}\r\n            </div>\r\n        <div>\r\n        {!checked&&<table>\r\n        <h2>Calls</h2>\r\n        <tr>\r\n            <th>Type</th>\r\n            <th>Name</th>\r\n            <th>Area</th>\r\n            <th>Priority</th>\r\n            <th>Check</th>\r\n        </tr> \r\n        {formData.length>0&&(formData.map(data=>{\r\n        return(\r\n        <tr>\r\n            <td>{data.type}</td>\r\n            <td>{data.name}</td>\r\n            <td>{data.jurisdiction}</td>\r\n            <td>{data.priority}</td>\r\n            <td><input \r\n            type=\"checkbox\"\r\n            checked={data.name===civ?true:false}\r\n            onChange={() =>Change(data.name)}/></td>\r\n        </tr>\r\n        )\r\n        }))}\r\n        </table>\r\n        }\r\n        {checked&&coords.latitude!==0&&<ShowMap coords={coords}/>}\r\n        </div>\r\n        {!checked&&<button className=\"logOutButtonSquad\" onClick={()=>window.location.href=\"http://localhost:3000/\"}>\r\n        Log Out\r\n        </button>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Squad;","C:\\Users\\Ravisankar S Menon\\Desktop\\dbms\\client\\src\\pages\\ActiveCalls.js",[],[],"C:\\Users\\Ravisankar S Menon\\Desktop\\dbms\\client\\src\\pages\\ShowMap.js",["47","48"],[],"C:\\Users\\Ravisankar S Menon\\Desktop\\dbms\\client\\src\\pages\\Map.jsx",[],[],{"ruleId":"49","severity":1,"message":"50","line":5,"column":39,"nodeType":"51","messageId":"52","endLine":5,"endColumn":43},{"ruleId":"53","severity":1,"message":"54","line":95,"column":6,"nodeType":"55","endLine":95,"endColumn":8,"suggestions":"56"},{"ruleId":"53","severity":1,"message":"57","line":71,"column":8,"nodeType":"55","endLine":71,"endColumn":10,"suggestions":"58"},{"ruleId":"53","severity":1,"message":"54","line":51,"column":6,"nodeType":"55","endLine":51,"endColumn":8,"suggestions":"59"},{"ruleId":"60","severity":1,"message":"61","line":55,"column":22,"nodeType":"62","messageId":"63","endLine":55,"endColumn":24},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getCurrentCityName' and 'options'. Either include them or remove the dependency array.","ArrayExpression",["64"],"React Hook React.useEffect has a missing dependency: 'jurisdiction'. Either include it or remove the dependency array.",["65"],["66"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected",{"desc":"67","fix":"68"},{"desc":"69","fix":"70"},{"desc":"67","fix":"71"},"Update the dependencies array to be: [getCurrentCityName, options]",{"range":"72","text":"73"},"Update the dependencies array to be: [jurisdiction]",{"range":"74","text":"75"},{"range":"76","text":"73"},[2588,2590],"[getCurrentCityName, options]",[2024,2026],"[jurisdiction]",[1134,1136]]